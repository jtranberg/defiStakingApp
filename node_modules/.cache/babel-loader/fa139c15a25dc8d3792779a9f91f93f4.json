{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Me\\\\Desktop\\\\defistakingDapp\\\\defiStakingApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Me\\\\Desktop\\\\defistakingDapp\\\\defiStakingApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Me\\\\Desktop\\\\defistakingDapp\\\\defiStakingApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Me\\\\Desktop\\\\defistakingDapp\\\\defiStakingApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Me\\\\Desktop\\\\defistakingDapp\\\\defiStakingApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Me\\\\Desktop\\\\defistakingDapp\\\\defiStakingApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Me\\\\Desktop\\\\defistakingDapp\\\\defiStakingApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Me\\\\Desktop\\\\defistakingDapp\\\\defiStakingApp\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\nimport RWD from '../truffle_abis/RWD.json';\nimport DecentralBank from '../truffle_abis/DecentralBank.json';\nimport Main1 from './Main1.js';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('No Ethereum browser detected. Please install MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, tetherData, tetherBalance, tether, rwdData, rwdBalance, rwd, decentralBankData, stakingBalance, decentralBank;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                web3 = window.web3;\n                _context3.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                // Load Tether contract\n                tetherData = Tether.networks[networkId];\n                tetherBalance = '0';\n                tether = {};\n\n                if (!tetherData) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                _context3.next = 16;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 16:\n                tetherBalance = _context3.sent;\n\n              case 17:\n                // Load RWD contract\n                rwdData = RWD.networks[networkId];\n                rwdBalance = '0';\n                rwd = {};\n\n                if (!rwdData) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n                _context3.next = 24;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 24:\n                rwdBalance = _context3.sent;\n\n              case 25:\n                // Load Decentral Bank contract\n                decentralBankData = DecentralBank.networks[networkId];\n                stakingBalance = '0';\n                decentralBank = {};\n\n                if (!decentralBankData) {\n                  _context3.next = 33;\n                  break;\n                }\n\n                decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n                _context3.next = 32;\n                return decentralBank.methods.stakingBalance(this.state.account).call();\n\n              case 32:\n                stakingBalance = _context3.sent;\n\n              case 33:\n                // Update state\n                this.setState({\n                  tether: tether,\n                  rwd: rwd,\n                  decentralBank: decentralBank,\n                  tetherBalance: tetherBalance.toString(),\n                  rwdBalance: rwdBalance.toString(),\n                  stakingBalance: stakingBalance.toString(),\n                  loading: false\n                });\n                _context3.next = 40;\n                break;\n\n              case 36:\n                _context3.prev = 36;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error('Error loading blockchain data:', _context3.t0);\n                this.setState({\n                  loading: false\n                });\n\n              case 40:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 36]]);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          account = _this$state.account,\n          tetherBalance = _this$state.tetherBalance,\n          rwdBalance = _this$state.rwdBalance,\n          stakingBalance = _this$state.stakingBalance,\n          loading = _this$state.loading;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px',\n          minHeight: '100vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n        id: \"loader\",\n        className: \"text-center\",\n        style: {\n          margin: '30px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, \"LOADING, PLEASE WAIT...\") : /*#__PURE__*/React.createElement(Main1, {\n        tetherBalance: tetherBalance,\n        rwdBalance: rwdBalance,\n        stakingBalance: stakingBalance,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Me/Desktop/defistakingDapp/defiStakingApp/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","RWD","DecentralBank","Main1","App","props","state","account","tether","rwd","decentralBank","tetherBalance","rwdBalance","stakingBalance","loading","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","net","getId","networkId","tetherData","networks","Contract","abi","address","methods","balanceOf","call","rwdData","decentralBankData","toString","console","error","maxWidth","minHeight","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navbar from './Navbar';\r\nimport Web3 from 'web3';\r\nimport Tether from '../truffle_abis/Tether.json';\r\nimport RWD from '../truffle_abis/RWD.json';\r\nimport DecentralBank from '../truffle_abis/DecentralBank.json';\r\nimport Main1 from './Main1.js';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '0x0',\r\n      tether: {},\r\n      rwd: {},\r\n      decentralBank: {},\r\n      tetherBalance: '0',\r\n      rwdBalance: '0',\r\n      stakingBalance: '0',\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.loadWeb3();\r\n    await this.loadBlockchainData();\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      window.alert('No Ethereum browser detected. Please install MetaMask!');\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    try {\r\n      const web3 = window.web3;\r\n      const accounts = await web3.eth.getAccounts();\r\n      this.setState({ account: accounts[0] });\r\n\r\n      const networkId = await web3.eth.net.getId();\r\n\r\n      // Load Tether contract\r\n      const tetherData = Tether.networks[networkId];\r\n      let tetherBalance = '0';\r\n      let tether = {};\r\n      if (tetherData) {\r\n        tether = new web3.eth.Contract(Tether.abi, tetherData.address);\r\n        tetherBalance = await tether.methods.balanceOf(this.state.account).call();\r\n      }\r\n\r\n      // Load RWD contract\r\n      const rwdData = RWD.networks[networkId];\r\n      let rwdBalance = '0';\r\n      let rwd = {};\r\n      if (rwdData) {\r\n        rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\r\n        rwdBalance = await rwd.methods.balanceOf(this.state.account).call();\r\n      }\r\n\r\n      // Load Decentral Bank contract\r\n      const decentralBankData = DecentralBank.networks[networkId];\r\n      let stakingBalance = '0';\r\n      let decentralBank = {};\r\n      if (decentralBankData) {\r\n        decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\r\n        stakingBalance = await decentralBank.methods.stakingBalance(this.state.account).call();\r\n      }\r\n\r\n      // Update state\r\n      this.setState({\r\n        tether,\r\n        rwd,\r\n        decentralBank,\r\n        tetherBalance: tetherBalance.toString(),\r\n        rwdBalance: rwdBalance.toString(),\r\n        stakingBalance: stakingBalance.toString(),\r\n        loading: false,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error loading blockchain data:', error);\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { account, tetherBalance, rwdBalance, stakingBalance, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Navbar account={account} />\r\n        <div className='container-fluid mt-5'>\r\n          <div className=\"row\">\r\n            <main\r\n              role='main'\r\n              className='col-lg-12 ml-auto mr-auto'\r\n              style={{ maxWidth: '600px', minHeight: '100vh' }}\r\n            >\r\n              <div>\r\n                {loading ? (\r\n                  <p id='loader' className='text-center' style={{ margin: '30px' }}>\r\n                    LOADING, PLEASE WAIT...\r\n                  </p>\r\n                ) : (\r\n                  <Main1\r\n                    tetherBalance={tetherBalance}\r\n                    rwdBalance={rwdBalance}\r\n                    stakingBalance={stakingBalance}\r\n                  />\r\n                )}\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}